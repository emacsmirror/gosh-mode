* high priority
** create external gosh script
delegate parsing scheme source code

** *gosh-documented-exports*
relate to module name

** bug

;;TODO top level loop function in script 
;; example:
;; #!/usr/bin/env gosh
;; (while (read-line))
;;



* low priority
** gather method document? comment?
** add ChangeLog 

** Renew
*** can enable change binary
/usr/local/bin/gosh
/usr/local/gosh-current/bin/gosh

if executable script
if in library buffer.
(string-match "^/usr/local/share/gauche" buffer-file-name)

can select gosh binary easily

support after install gauche completely.
In other word, execute emacs and install gauche is not supported.






** send EnvironmentVariable when evaluate 
** backend-eval error must be multiple???
dynamically put the error properties

** unload module
module that have following definition

(define *hoge* 'hoge)

After validated, change this definition to 

(define *hoge* *hoge*)

this must have compile error. but remaining previous loaded definition make be valid.

** resolve object-apply

** macroexpand last sexp
how to popup this.

** export current definition

** see autoloads trunk/src/autoloads.scm


** auto insert `use'

ex insert string-ci>? type anything insert (use srfi-13) top of current buffer

** extract arg from gosh with-name

syntax rule
macro arguments
method arguments 
generic each methods arguments

** in the trunk directory
browsing trunk repository

** see completion-at-point

change behavior like elisp

** gosh-stub-mode

* refactor
** map currentenv
* BUG
** eldoc display odd
   i don't know exactly why but didn't run eldoc-print* function 
 see gosh-backend-switch-context after-change-function
* egosh
** name
** reload module if file is modified
TODO `reload' means 
1. clear module (hash-table-clear! (module-table))
2. `reload' imported modules
3. 
